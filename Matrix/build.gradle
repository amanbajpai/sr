buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    def coverageSourceDirs = ['src/main/java']
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/BitmapRequestBuilder.class',
                       '**/DrawableRequestBuilder.class',
                       '**/GifRequestBuilder.class',]
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

android {
    ext.env = System.getenv()
    ext.buildNumber = env.BUILD_NUMBER ?: '0'
    ext.buildNumber = buildNumber.toInteger()
    compileSdkVersion 23
    buildToolsVersion "24.0.1"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 22
        versionCode buildNumber + 10000
        versionName '2.3.3'
        applicationId 'com.ros.smartrocket'
        buildConfigField "boolean", "LOG_ENABLED", "!((\"production\".equals(FLAVOR) || \"chinaProduction\".equals" +
                "(FLAVOR)) && \"release\".equals(BUILD_TYPE))"
        buildConfigField "String", "LOGIN_SCREEN_VERSION", "(\"production\".equals(FLAVOR) || \"chinaProduction\"" +
                ".equals(FLAVOR))? VERSION_NAME : String.valueOf(VERSION_CODE)"
        buildConfigField "String", "JENKINS_BUILD_VERSION", "String.valueOf(" + buildNumber.toInteger() + ")"
        buildConfigField "String", "SERVER_API_KEY", "\"AIzaSyDW_Q63y83xT0LmBgmEyB3oyxX8GQtkXAM\""
        buildConfigField "String", "GCM_SENDER_ID", "\"318949058113\""

        multiDexEnabled = true
        vectorDrawables.useSupportLibrary = true
    }

    jacoco {
        version = '0.7.2.201409121644'
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file('matrix_app_key.jks')
            storePassword 'RocketStore852'
            keyAlias 'SmartRocketKey'
            keyPassword 'RocketMan852'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "boolean", "RUN_CRASHLYTICS", 'false'
            buildConfigField "String", "BAIDU_API_KEY", "\"n0GLOKAhMcokvNddHSdFnqPh\""
            manifestPlaceholders = [googleApiKey: "AIzaSyB5HGEpnHOUwctdPHZN168PPUtOZOg6BPI",
                                    baiduApiKey : "n0GLOKAhMcokvNddHSdFnqPh",
                                    jPushAppKey : "1afdb8b1c523982b249eae94"]
            signingConfig signingConfigs.debug
            zipAlignEnabled false
            minifyEnabled false
            debuggable true
            jniDebuggable false
            renderscriptDebuggable false
            testCoverageEnabled false
            proguardFiles 'configs/proguard-android.txt', 'configs/proguard-rules.pro',
                    'configs/proguard-optimization-only-rules.pro'
        }

        release {
            buildConfigField "boolean", "RUN_CRASHLYTICS", 'true'
            buildConfigField "String", "BAIDU_API_KEY", "\"hc5VEmGKRDw7ls2ZpGz18n6g\""
            manifestPlaceholders = [googleApiKey: "AIzaSyB5HGEpnHOUwctdPHZN168PPUtOZOg6BPI",
                                    baiduApiKey : "hc5VEmGKRDw7ls2ZpGz18n6g",
                                    jPushAppKey : "1afdb8b1c523982b249eae94"]
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            testCoverageEnabled false
            proguardFiles 'configs/proguard-android.txt', 'configs/proguard-rules.pro',
                    'configs/proguard-optimization-only-rules.pro'
        }
    }

    productFlavors {
        predev {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://predev.api.matrix.osiris.pp.ciklum.com/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://predev.agents.matrix.osiris.pp.ciklum.com\""
            buildConfigField "String", "GEOCODER_URL", "\"https://maps.googleapis.com\""
            buildConfigField "boolean", "CHINESE", "false"
        }

        chinaPredev {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://predev.api.matrix.osiris.pp.ciklum.com/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.smartrocket.cn\""
            buildConfigField "String", "GEOCODER_URL", "\"http://api.map.baidu.com/geocoder/v2\""
            buildConfigField "boolean", "CHINESE", "true"
        }
        dev {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://dev.api.matrix.osiris.pp.ciklum.com/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://dev.agents.matrix.osiris.pp.ciklum.com\""
            buildConfigField "String", "GEOCODER_URL", "\"https://maps.googleapis.com\""
            buildConfigField "boolean", "CHINESE", "false"
        }
        staging {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "true"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://api.staging.redoceansolutions.com/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://agent.staging.redoceansolutions.com\""
            buildConfigField "String", "GEOCODER_URL", "\"https://maps.googleapis.com\""
            buildConfigField "boolean", "CHINESE", "false"
        }
        production {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "true"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://matrixapi.red-ocean.net/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.smart-rocket.net/\""
            buildConfigField "String", "GEOCODER_URL", "\"https://maps.googleapis.com\""
            buildConfigField "boolean", "CHINESE", "false"
        }
        chinaDev {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://dev.api.matrix.osiris.pp.ciklum.com/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.smartrocket.cn\""
            buildConfigField "String", "GEOCODER_URL", "\"http://api.map.baidu.com/geocoder/v2\""
            buildConfigField "boolean", "CHINESE", "true"
        }
        chinaStaging {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "true"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://api.staging.redoceansolutions.com/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.smartrocket.cn\""
            buildConfigField "String", "GEOCODER_URL", "\"http://api.map.baidu.com/geocoder/v2\""
            buildConfigField "boolean", "CHINESE", "true"
        }
        chinaProduction {
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "true"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://matrixapi.red-ocean.cn/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.smartrocket.cn\""
            buildConfigField "String", "GEOCODER_URL", "\"http://api.map.baidu.com/geocoder/v2\""
            buildConfigField "boolean", "CHINESE", "true"
        }
    }
}


dependencies {
    // support
    compile 'com.google.android.gms:play-services:6.1.71'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:gridlayout-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.android.support:cardview-v7:23.2.1'
    compile 'com.helpshift:android-helpshift-aar:4.5.0'

    // Cluster map's pins
    compile project(':libs:clusterkraf')
    compile project(':libs:BaiduClusterkraf')

    // other
    compile 'com.romandanylyk:pageindicatorview:0.0.8'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'commons-io:commons-io:2.4'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.0@aar') {
        transitive = true;
    }
    compile fileTree(excludes: ['baidumapapi_base_v3_7_1.jar', 'baidumapapi_map_v3_7_1.jar', 'locSDK_6.13.jar'], include: '*.jar', dir: '../libs')
    chinaProductionCompile fileTree(include: '*.jar', dir: '../libsChina')
    chinaDevCompile fileTree(include: '*.jar', dir: '../libsChina')
    chinaStagingCompile fileTree(include: '*.jar', dir: '../libsChina')
    chinaPredevCompile fileTree(include: '*.jar', dir: '../libsChina')
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.facebook.android:facebook-android-sdk:4.+'
}

repositories {
    flatDir {
        dirs '../libs'
    }
}


