buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
        classpath 'com.github.nrudenko:gradle-android-cq-plugin:0.1+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
        classpath 'org.robolectric:robolectric-gradle-plugin:0.14.+'
    }
}
apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'robolectric'
//apply plugin: 'jacoco'
apply plugin: 'crashlytics'
apply plugin: 'android-cq'


repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'http://download.crashlytics.com/maven' }
}

robolectric {
    include '**/*Test.class'
    exclude '**/espresso/**/*.class'

    // Specify max number of processes (default is 1)
    maxParallelForks = 4

    // use afterTest to listen to the test execution results
    afterTest { descriptor, result ->
        println "Executing test for ${descriptor.name} with result: ${result.resultType}"
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    def coverageSourceDirs = ['src/main/java']
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/BitmapRequestBuilder.class',
                       '**/DrawableRequestBuilder.class',
                       '**/GifRequestBuilder.class',]
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

dependencies {
    // Google Play Services
    compile 'com.google.android.gms:play-services:6.1.71'
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.squareup.picasso:picasso:2.2.0'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile fileTree(include: '*.jar', dir: '../libs')
    // Cluster map's pins
    compile project(':libs:clusterkraf')
    compile project(':libs:BaiduClusterkraf')
    // test dependencies
    androidTestCompile 'com.squareup:fest-android:1.0.+'
    androidTestCompile('junit:junit:4.11');
    androidTestCompile('org.robolectric:robolectric:2.3') {
        exclude module: 'classworlds'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-plugin-registry'
        exclude module: 'maven-profile'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'nekohtml'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-http-shared'
        exclude module: 'wagon-provider-api'
        exclude group: 'com.android.support', module: 'support-v4'
    }
}

android {
    ext.env = System.getenv()
    ext.buildNumber = env.BUILD_NUMBER ?: '0'
    ext.buildNumber = buildNumber.toInteger()
    compileSdkVersion 21
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
        versionCode buildNumber
        versionName '2.0.2'
        applicationId 'com.ros.smartrocket'
        buildConfigField "boolean", "LOG_ENABLED", "!(\"Production\".equals(FLAVOR) && \"release\".equals(BUILD_TYPE))"
        buildConfigField "String", "LOGIN_SCREEN_VERSION", "\"Production\".equals(FLAVOR)? VERSION_NAME : String.valueOf(VERSION_CODE)"
        buildConfigField "String", "ANDROID_API_KEY", "\"AIzaSyB5HGEpnHOUwctdPHZN168PPUtOZOg6BPI\""
        buildConfigField "String", "SERVER_API_KEY", "\"AIzaSyDW_Q63y83xT0LmBgmEyB3oyxX8GQtkXAM\""
        buildConfigField "String", "GCM_SENDER_ID", "\"318949058113\""
        buildConfigField "String", "KNOWLEDGE_BASE_URL", "\"https://smartrocket.desk.com/\""
        buildConfigField "String", "SHARE_URL", "\"http://smart-rocket.com/crew/\""
    }

    jacoco {
        version = '0.7.2.201409121644'
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file('matrix_app_key.jks')
            storePassword 'RocketStore852'
            keyAlias 'SmartRocketKey'
            keyPassword 'RocketMan852'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "RUN_CRASHLYTICS", 'false'
            buildConfigField "String", "BAIDU_API_KEY", "\"n0GLOKAhMcokvNddHSdFnqPh\""
            manifestPlaceholders = [googleApiKey: "AIzaSyB5HGEpnHOUwctdPHZN168PPUtOZOg6BPI",
                                    baiduApiKey : "n0GLOKAhMcokvNddHSdFnqPh",
                                    jPushAppKey : "1afdb8b1c523982b249eae94"]
            signingConfig signingConfigs.debug
            zipAlignEnabled false
            minifyEnabled false
            debuggable true
            jniDebuggable false
            renderscriptDebuggable false
            testCoverageEnabled false
            proguardFiles 'configs/proguard-android.txt', 'configs/proguard-rules.pro',
                    'configs/proguard-optimization-only-rules.pro'
        }

        release {
            buildConfigField "boolean", "RUN_CRASHLYTICS", 'true'
            buildConfigField "String", "BAIDU_API_KEY", "\"hc5VEmGKRDw7ls2ZpGz18n6g\""
            manifestPlaceholders = [googleApiKey: "AIzaSyB5HGEpnHOUwctdPHZN168PPUtOZOg6BPI",
                                    baiduApiKey : "hc5VEmGKRDw7ls2ZpGz18n6g",
                                    jPushAppKey : "1afdb8b1c523982b249eae94"]
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            testCoverageEnabled false
            proguardFiles 'configs/proguard-android.txt', 'configs/proguard-rules.pro',
                    'configs/proguard-optimization-only-rules.pro'
        }
    }

    productFlavors {
        Dev {
            buildConfigField "boolean", "USE_BAIDU", "false"
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://api.lb.redoceansolutions.com/\""
            buildConfigField "String", "TERMS_AND_CONDITION_URL", "\"http://smart-rocket.com/terms-of-service/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.lb.redoceansolutions.com\""
            buildConfigField "String", "GEOCODER_URL", "\"https://maps.googleapis.com\""
        }
        Staging {
            buildConfigField "boolean", "USE_BAIDU", "false"
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://api.staging.redoceansolutions.com/\""
            buildConfigField "String", "TERMS_AND_CONDITION_URL", "\"http://smart-rocket.com/terms-of-service/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://agent.staging.redoceansolutions.com\""
            buildConfigField "String", "GEOCODER_URL", "\"https://maps.googleapis.com\""
        }
        Production {
            versionCode 10009
            buildConfigField "boolean", "USE_BAIDU", "false"
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "true"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://matrixapi.red-ocean.net/\""
            buildConfigField "String", "TERMS_AND_CONDITION_URL", "\"http://smart-rocket.com/terms-of-service/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.smart-rocket.net/\""
            buildConfigField "String", "GEOCODER_URL", "\"https://maps.googleapis.com\""
        }
        ChinaDev {
            buildConfigField "boolean", "USE_BAIDU", "true"
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://api.lb.redoceansolutions.com/\""
            buildConfigField "String", "TERMS_AND_CONDITION_URL", "\"http://smart-rocket.com/terms-of-service/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.lb.redoceansolutions.com\""
            buildConfigField "String", "GEOCODER_URL", "\"http://api.map.baidu.com/geocoder/v2\""
        }
        ChinaStaging {
            buildConfigField "boolean", "USE_BAIDU", "true"
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "false"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://api.staging.redoceansolutions.com/\""
            buildConfigField "String", "TERMS_AND_CONDITION_URL", "\"http://smart-rocket.com/terms-of-service/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://agent.staging.redoceansolutions.com\""
            buildConfigField "String", "GEOCODER_URL", "\"http://api.map.baidu.com/geocoder/v2\""
        }
        ChinaProduction {
            versionCode 10009
            buildConfigField "boolean", "USE_BAIDU", "true"
            buildConfigField "boolean", "CHECK_MOCK_LOCATION", "true"
            buildConfigField "String", "WEB_SERVICE_URL", "\"http://matrixapi.red-ocean.net/\""
            buildConfigField "String", "TERMS_AND_CONDITION_URL", "\"http://smart-rocket.com/terms-of-service/\""
            buildConfigField "String", "PROFILE_PAGE_URL", "\"http://crew.smart-rocket.net/\""
            buildConfigField "String", "GEOCODER_URL", "\"http://api.map.baidu.com/geocoder/v2\""
        }
    }
}


